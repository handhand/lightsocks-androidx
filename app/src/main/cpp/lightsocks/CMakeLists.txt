cmake_minimum_required(VERSION 3.10.2)

# Declares and names the project.

project("testlib")

# Creates and names a library, sets it as either STATIC
# or SHARED, and provides the relative paths to its source code.
# You can define multiple libraries, and CMake builds them for you.
# Gradle automatically packages shared libraries with your APK.

add_library( # Sets the name of the library.
        LightsocksAndroid

        # Sets the library as a shared library.
        STATIC

        # Provides a relative path to your source file(s).
        lightsocks_android_server.cpp
        lightsocks_android_encryptor.cpp
        lightsocks_android_server.cpp
        base64.cpp)

# Searches for a specified prebuilt library and stores the path as a
# variable. Because CMake includes system libraries in the search path by
# default, you only need to specify the name of the public NDK library
# you want to add. CMake verifies that the library exists before
# completing its build.

find_library( # Sets the name of the path variable.
        log-lib

        # Specifies the name of the NDK library that
        # you want CMake to locate.
        log )

# Specifies libraries CMake should link to your target library. You
# can link multiple libraries, such as libraries you define in this
# build script, prebuilt third-party libraries, or system libraries.

target_link_libraries( # Specifies the target library.
        LightsocksAndroid

        # Links the target library to the log library
        # included in the NDK.
        LINK_PUBLIC
        ${log-lib} )

################ libevent ####################

target_link_libraries (LightsocksAndroid LINK_PUBLIC event_core_static)